// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

protocols_files = [
    "stable/viewporter/viewporter.xml",
    "unstable/alpha-compositing/alpha-compositing-unstable-v1.xml",
    "unstable/keyboard/keyboard-configuration-unstable-v1.xml",
    "unstable/keyboard/keyboard-extension-unstable-v1.xml",
    "unstable/linux-dmabuf/linux-dmabuf-unstable-v1.xml",
    "unstable/gaming-input/gaming-input-unstable-v2.xml",
    "unstable/remote-shell/remote-shell-unstable-v1.xml",
    "unstable/secure-output/secure-output-unstable-v1.xml",
    "unstable/stylus/stylus-unstable-v2.xml",
    "unstable/stylus-tools/stylus-tools-unstable-v1.xml",
    "unstable/vsync-feedback/vsync-feedback-unstable-v1.xml",
]
protocols = [
    "viewporter.xml",
    "alpha-compositing-unstable-v1.xml",
    "keyboard-configuration-unstable-v1.xml",
    "keyboard-extension-unstable-v1.xml",
    "linux-dmabuf-unstable-v1.xml",
    "gaming-input-unstable-v2.xml",
    "remote-shell-unstable-v1.xml",
    "secure-output-unstable-v1.xml",
    "stylus-unstable-v2.xml",
    "stylus-tools-unstable-v1.xml",
    "vsync-feedback-unstable-v1.xml",
]
protocol_client_headers = [
    "viewporter-client-protocol.h",
    "alpha-compositing-unstable-v1-client-protocol.h",
    "keyboard-configuration-unstable-v1-client-protocol.h",
    "keyboard-extension-unstable-v1-client-protocol.h",
    "linux-dmabuf-unstable-v1-client-protocol.h",
    "gaming-input-unstable-v2-client-protocol.h",
    "remote-shell-unstable-v1-client-protocol.h",
    "secure-output-unstable-v1-client-protocol.h",
    "stylus-unstable-v2-client-protocol.h",
    "stylus-tools-unstable-v1-client-protocol.h",
    "vsync-feedback-unstable-v1-client-protocol.h",
]

// Copy protocol files to intermediate folders
genrule {
    name: "wayland_client_protocols",
    cmd: "cp $(in) $(genDir)",
    srcs: protocols_files,
    out: protocols,
    tool_files:["."],
}

// Generate protocol source files
gensrcs {
    name: "wayland_client_protocol_sources",
    output_extension: "c",
    cmd: "$(location wayland_scanner) code < $(in) > $(out)",
    srcs: [":wayland_client_protocols"],
    tools: ["wayland_scanner"],
}

// Generate protocol header files
genrule {
    name: "wayland_client_protocol_headers",
    cmd: "$(location gen_protocol_headers.sh) $(location wayland_scanner) $(genDir) $(in)",
    srcs: [":wayland_client_protocols"],
    out: protocol_client_headers,
    tools: ["wayland_scanner"],
    tool_files: ["gen_protocol_headers.sh"],
}

cc_library_static {
    name: "libwayland_protocols_client",
    cflags: [
        "-Wall",
        "-Wextra",
        "-g",
        "-fvisibility=hidden"
    ],
    static_libs: ["libwayland_client"],
    generated_sources: ["wayland_client_protocol_sources"],
    generated_headers: ["wayland_client_protocol_headers"],
    export_generated_headers: ["wayland_client_protocol_headers"],
}

subdirs = ["flinger_headers"]
